#!/usr/bin/env python
#

"""
gimages: graphterm-aware image display
"""

import hashlib
import hmac
import json
import mimetypes
import os
import sys
import tty
import termios

from optparse import OptionParser

Lterm_cookie = os.getenv("GRAPHTERM_COOKIE", "")
Host = os.getenv("GRAPHTERM_HOST", "")
Html_escapes = ["\x1b[?1155;%sh" % Lterm_cookie,
                "\x1b[?1155l"]

HEX_DIGITS = 16

Work_dir = os.getcwd()

usage = "usage: %prog [-f] <location>"
parser = OptionParser(usage=usage)
parser.add_option("-f", "--fullscreen",
                  action="store_true", dest="fullscreen", default=False,
                  help="Fullscreen display")

(options, args) = parser.parse_args()

params = {"scroll": "top", "current_directory": Work_dir}
params["display"] = "fullpage" if options.fullscreen else "block"

Headers = {"content_type": "text/html"}
Headers["x_gterm_response"] = "pagelet"
Headers["x_gterm_parameters"] = params

IMGFORMAT = '<div class="gterm-imgcontainer"><img class="gterm-fullimg" src="%s"></img></div>' if options.fullscreen else '<img class="gterm-blockimg" src="%s"></img><br>' 

def write_pagelet(headers, html):
    pagelet = Html_escapes[0] + json.dumps(headers) + "\n\n" + html + Html_escapes[1]
    sys.stdout.write(pagelet)
    
if not args:
    args = os.listdir(Work_dir)
    args = [x for x in args if not x.startswith(".")]
    args.sort()

file_list = []
for filename in args:
    fullname = os.path.expanduser(filename)
    filepath = os.path.normcase(os.path.abspath(fullname))

    if not os.path.exists(filepath):
        print >> sys.stderr, "File %s not found" % filepath
        continue

    if not os.path.isfile(filepath):
        continue
    
    mimetype, encoding = mimetypes.guess_type(filepath)
    if mimetype and mimetype.startswith("image/"):
        file_list.append((filepath, filename))

if not file_list:
    sys.exit(1)
    
def display_file(filepath):
    filehmac = "?hmac="+hmac.new(str(Lterm_cookie), filepath, digestmod=hashlib.sha256).hexdigest()[:HEX_DIGITS]
    fileurl = "/file/" + Host + filepath + filehmac

    html = IMGFORMAT % fileurl
    write_pagelet(Headers, html)

if not options.fullscreen:
    for filepath, filename in file_list:
        print filename
        display_file(filepath)
    sys.exit(0)

Stdin_fd = sys.stdin.fileno()
Saved_settings = termios.tcgetattr(Stdin_fd)

j = -1
try:
    print >> sys.stderr, "Slideshow: SPC/'f' => forward, BSP/'b' => back, 'q' or ESCAPE => quit"

    # Raw tty input without echo
    tty.setraw(Stdin_fd)
    while True:
        ch = sys.stdin.read(1)
        if ch == "\x03" or ch == "\x04" or ch == "\x1b" or ch == "q": # ^C/^D/ESC/q
            write_pagelet(Headers, "")
            sys.exit(0)

        if ch == "f" or ch == " ":
            jnew = j + 1
        elif ch == "b" or ch == "\x08" or ch == "\x7f": # Backspace
            jnew = j - 1
        else:
            continue

        jnew = max(0, min(jnew, len(file_list)-1) )
        if j == jnew:
            continue

        j = jnew
        display_file(file_list[j][0])

except KeyboardInterrupt:
    sys.exit(1)
finally:
    termios.tcsetattr(Stdin_fd, termios.TCSADRAIN, Saved_settings)

